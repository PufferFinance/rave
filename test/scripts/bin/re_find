#!/usr/bin/python3

"""
    Linux-based regex tools all suck compared to the
    simplicity of using Python's re.findall.

    Success: This program returns matches as a
    space delimited list with each match escaped
    and quoted for use as inputs or args.

    Failure: Otherwise it returns nothing.
    Allows programs to easily parse text and
    detect failure cases.
"""

import re, sys, binascii

# Utils.
to_h = binascii.hexlify
to_b = lambda x: x if isinstance(x, bytes) else x.encode("ascii")
to_s = lambda x: x if isinstance(x, str) else x.decode("utf-8")

# Output matching.
hey = sys.stdin.read()
pattern = sys.argv[1]
needles = re.findall(pattern, hey, re.MULTILINE)
if len(needles):
    matches = []
    for needle in needles:
        # List of possible matches.
        if isinstance(needle, tuple):
            for sub_needle in needle:
                # Use the first non empty match in set.
                if sub_needle != '':
                    matches.append(sub_needle)
                    break
        else:
            if needle != '':
                matches.append(needle)

    # Repr is a simple way to escape it.
    matches = [repr(x) for x in matches]
    if len(sys.argv) > 2:
        matches = [to_s(to_h(to_b(x[1:-1]))) for x in matches]

    # Show results.
    out = " ".join(matches)
    print(out, end="")